### YamlMime:Tutorial
title: "Criar máquinas virtuais com o Azure PowerShell"
metadata:
  title: "Criar máquinas virtuais com o Azure PowerShell"
  description: "Introdução ao Azure PowerShell através da criação de máquinas virtuais."
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 02/08/2018
  ms.author: sewhee
  author: sdwheeler
  manager: carmonm
  ms.devlang: azure-powershell
  ms.technology: azure
  ms.openlocfilehash: bb5024927da7888dca406a522fa39dfe225afb89
  ms.sourcegitcommit: 3842efd1eb2d16f7c6d9ae87d6d7916b770658c1
  ms.translationtype: HT
  ms.contentlocale: pt-PT
  ms.lasthandoff: 03/05/2018
items:
- durationInMinutes: 1
  content: "Neste tutorial, irá aprender todos os passos envolvidos na configuração de uma máquina virtual com o Azure PowerShell. O tutorial também abrange consultas de saída, a reutilização de recursos do Azure e a limpeza de recursos.\n\nPode concluir este tutorial com a experiência interativa disponibilizada através do Azure Cloud Shell, ou pode [instalar o Azure PowerShell](install-azurerm-ps.md) localmente.\n\nUtilize __ctrl-shift-v__ (__cmd-shift-v__ no macOS) para colar texto de tutorial no Azure Cloud Shell."
- durationInMinutes: 1
  title: "Iniciar sessão"
  content: "Se estiver a utilizar uma instalação local do Azure PowerShell, terá de iniciar sessão antes de realizar qualquer outro passo.\n\n```powershell\nLogin-AzureRmAccount\n```\n\nConclua o processo de início de sessão ao seguir os passos apresentados no seu terminal."
- durationInMinutes: 1
  title: Criar um grupo de recursos
  content: "No Azure, todos os recursos são alocados num grupo de gestão de recursos. Os grupos de recursos oferecem agrupamentos lógicos de recursos para que seja mais fácil trabalhar com os mesmos como uma coleção.\nNeste tutorial, todos os recursos criados estão num único grupo com o nome `TutorialResources`.\n\n```powershell\nNew-AzureRmResourceGroup -Name TutorialResources -Location eastus\n```\n\n```Output\nResourceGroupName : TutorialResources\nLocation          : eastus\nProvisioningState : Succeeded\nTags              :\nResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources\n```"
- durationInMinutes: 1
  title: Criar credenciais de administrador para a VM
  content: "Antes de poder criar uma nova máquina virtual, tem de criar um objeto de credencial com o nome de utilizador e a palavra-passe da conta de administrador da VM do Windows.\n\n```powershell\n$cred = Get-Credential -Message \"Enter a username and password for the virtual machine.\"\n```\n\nIntroduza o nome de utilizador e a palavra-passe quando solicitados. O objeto de credencial resultante é transmitido como um parâmetro no próximo passo.\n\n```Output\nWindows PowerShell credential request.\nEnter a username and password for the virtual machine.\nUser: tutorAdmin\nPassword for user tutorAdmin: *********\n```"
- durationInMinutes: 4
  title: "Criar uma máquina virtual"
  content: "As máquinas virtuais no Azure têm um elevado número de dependências. O Azure PowerShell cria estes recursos por si com base nos argumentos da linha de comandos que especificar. Para legibilidade, estamos a utilizar o [splatting do PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting) para transmitir os parâmetros aos cmdlets do Azure PowerShell.\n\nCrie uma nova máquina virtual com o Windows.\n\n```powershell\n$vmParams = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM1'\n  Location = 'eastus'\n  ImageName = 'Win2016Datacenter'\n  PublicIpAddressName = 'tutorialPublicIp'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM1 = New-AzureRmVM @vmParams\n```\nEnquanto a VM é criada, pode ver os valores dos parâmetros utilizados e os recursos do Azure que estão a ser criados.\nO PowerShell irá apresentar uma barra de progresso, conforme mostrado abaixo.\n\n```Output\n Creating Azure resources\n  39% \\\n  [ooooooooooooooooooooooooooooooooooo                                                                 ]\n\n  Creating TutorialVM1 virtual machine.\n```\n\nAssim que a VM estiver pronta, pode ver os resultados no Portal do Azure ou ao consultar a variável \\$newVM1.\n\n```powershell\n$newVM1\n```\n\n```Output\nResourceGroupName : TutorialResources\nId                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1\nVmId              : 12345678-9abc-def0-1234-56789abcedf0\nName              : TutorialVM1\nType              : Microsoft.Compute/virtualMachines\nLocation          : eastus\nTags              : {}\nHardwareProfile   : {VmSize}\nNetworkProfile    : {NetworkInterfaces}\nOSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState : Succeeded\nStorageProfile    : {ImageReference, OsDisk, DataDisks}\n```\n\nOs valores de propriedade listados entre chavetas são objetos aninhados. No próximo passo, vamos mostrar como pode ver valores específicos nestes objetos aninhados."
- durationInMinutes: 5
  title: "Obter informações da VM através de consultas"
  content: "Vamos obter algumas informações mais detalhadas da VM que acabámos de criar. Neste exemplo, verificamos o nome da VM e a conta de administrador criados.\n\n```powershell\n$newVM1.OSProfile | Select-Object ComputerName,AdminUserName\n```\n\n```Output\nComputerName AdminUsername\n------------ -------------\nTutorialVM1  tutorialAdmin\n```\n\nPodemos utilizar outros comandos do Azure PowerShell para obter informações específicas sobre a configuração de rede.\n\n```powershell\n$newVM1 | Get-AzureRmNetworkInterface |\n  Select-Object -ExpandProperty IpConfigurations |\n    Select-Object Name,PrivateIpAddress\n```\n\nNeste exemplo, estamos a utilizar o pipeline do PowerShell para enviar o objeto \\$newVM1 para o cmdlet `Get-AzureRmNetworkInterface`. A partir do objeto da interface de rede resultante, selecionamos o objeto IpConfigurations aninhado. A partir do objeto IpConfigurations, selecionamos as propriedades Name e PrivateIpAddress.\n\n```Output\nName        PrivateIpAddress\n----        ----------------\nTutorialVM1 192.168.1.4\n```\n\nPara confirmar que a VM está em execução, é necessário ligar através do Ambiente de Trabalho Remoto. Para isso, precisamos de saber o endereço IP público.\n\n```powershell\n$publicIp = Get-AzureRmPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources\n\n$publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}\n```\n\nNeste exemplo, utilizamos `Get-AzureRmPublicIpAddress` e armazenamos os resultados na variável \\$publicIp. A partir desta variável, selecionamos as propriedades e utilizamos uma expressão para obter a propriedade Fqdn aninhada.\n\n```Output\nName             IpAddress           FQDN\n----             ---------           ----\ntutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com\n```\n\nA partir do seu computador local, pode executar o seguinte comando para ligar à VM através do Ambiente de Trabalho Remoto.\n\n```powershell\nmstsc.exe /v <PUBLIC_IP_ADDRESS>\n```\n\nPara obter mais informações sobre a consulta de propriedades de objeto, veja [Consultar recursos do Azure](./queries-azureps.md)."
- durationInMinutes: 4
  title: Criar uma nova VM na sub-rede existente
  content: "A segunda VM utiliza a sub-rede existente.\n\n```powershell\n$vm2Params = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM2'\n  ImageName = 'Win2016Datacenter'\n  VirtualNetworkName = 'TutorialVM1'\n  SubnetName = 'TutorialVM1'\n  PublicIpAddressName = 'tutorialPublicIp2'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM2 = New-AzureRmVM @vm2Params\n\n$newVM2\n```\n\n```Output\nResourceGroupName        : TutorialResources\nId                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2\nVmId                     : 12345678-9abc-def0-1234-56789abcedf1\nName                     : TutorialVM2\nType                     : Microsoft.Compute/virtualMachines\nLocation                 : eastus\nTags                     : {}\nHardwareProfile          : {VmSize}\nNetworkProfile           : {NetworkInterfaces}\nOSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState        : Succeeded\nStorageProfile           : {ImageReference, OsDisk, DataDisks}\nFullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com\n```\n\nPode ignorar alguns passos para obter o endereço IP público da nova VM, uma vez que é devolvido na propriedade FullyQualifiedDomainName do objeto \\$newVM2. Utilize o seguinte comando para ligar através do Ambiente de Trabalho Remoto.\n\n```powershell\nmstsc.exe /v $newVM2.FullyQualifiedDomainName\n```"
- durationInMinutes: 4
  title: Limpeza
  content: "Agora que concluiu o tutorial, está na altura de limpar os recursos criados. Pode eliminar recursos individuais com o comando `Remove-AzureRmResource`, mas a forma mais segura de remover todos os recursos num grupo de recursos é eliminar o grupo com o comando `Remove-AzureRmResourceGroup`.\n\n```powershell\n$job = Remove-AzureRmResourceGroup -Name TutorialResources -Force -AsJob\n\n$job\n```\n\n```Output\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\n--     ----            -------------   -----         -----------     --------             -------\n1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzureRmResource...\n```\n\nEste comando elimina os recursos criados durante o tutorial e desaloca-os garantidamente pela ordem correta. O parâmetro `-AsJob` impede que o PowerShell bloqueie enquanto a eliminação está em curso. Para aguardar até que a eliminação esteja concluída, utilize o seguinte comando:\n\n```powershell\nWait-Job -Id $job.Id\n```\n\nQuando a limpeza estiver concluída, o tutorial termina. Continue para ver um resumo de tudo o que aprendeu e obter ligações para recursos que irão ajudá-lo nos passos seguintes."
- durationInMinutes: 1
  title: Resumo
  content: "\nParabéns! Aprendeu a criar VMs com recursos novos ou existentes, utilizou expressões e outros comandos do Azure PowerShell para capturar dados que são armazenados em variáveis de shell e viu alguns dos recursos que são criados para as VMs do Azure.\n\nO que faz a partir daqui depende de como planeia utilizar o Azure PowerShell. Tem uma variedade de materiais à sua disposição que explicam em maior profundidade as funcionalidades que este tutorial abrange.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Documentação detalhada do Azure PowerShell\n\nPode querer explorar a [documentação completa do Azure PowerShell](overview.md).\n\nPara obter mais informações sobre os comandos utilizados neste tutorial, veja os artigos seguintes.\n\n- [New-AzureRmResourceGroup](/powershell/module/azurerm.resources/new-azurermresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzureRmVM](/powershell/module/azurerm.compute/new-azurermvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Get-AzureRmPublicIpAddress](/powershell/module/azurerm.network/get-AzureRmPublicIpAddress)\n- [Remove-AzureRmResourceGroup](/powershell/module/azurerm.resources/Remove-AzureRmResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nTambém existem artigos que aprofundam as funcionalidades que o tutorial apresentou.\n\n- [Splatting do PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Consultas](queries-azureps.md)\n- [Formatação](formatting-output.md)\n- [Utilizar tarefas do PowerShell](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Scripts de exemplo\n\nSe quiser começar imediatamente a fazer tarefas específicas, veja alguns scripts de exemplo.\n\n- [Máquinas Virtuais do Linux](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Máquinas Virtuais do Windows](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Aplicações Web](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Bases de Dados SQL](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [BD do Cosmos](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Comentários\n\nSe quiser enviar comentários, sugestões ou colocar questões, existem várias formas de entrar em contacto connosco.\n\n* `Send-Feedback` é um comando incorporado do Azure PowerShell que lhe permite enviar comentários de forma livre à equipa.\n* Submeta um pedido de funcionalidade ou um relatório de erros no [repositório do Azure PowerShell](https://github.com/Azure/azure-powershell/issues).\n* Faça uma pergunta ou obtenha esclarecimentos ao submeter um problema no [repositório da documentação do Azure PowerShell](https://github.com/Azure/azure-docs-powershell/issues).\n\nEsperamos que goste de utilizar o Azure PowerShell!"
